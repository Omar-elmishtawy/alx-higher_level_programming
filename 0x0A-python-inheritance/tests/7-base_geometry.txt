=============================
The ``7-base_geometry`` module
=============================

Using ``BaseGeometry``
---------------------

Import the class:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test it:

	>>> bg = BaseGeometry()

	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> bg.integer_validator("width", 5)

	>>> bg.integer_validator("no")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("no", "no")
	Traceback (most recent call last):
	TypeError: no must be an integer

	>>> bg.integer_validator("no", [1, 2])
	Traceback (most recent call last):
	TypeError: no must be an integer

	>>> bg.integer_validator("no", 1.00)
	Traceback (most recent call last):
	TypeError: no must be an integer

	>>> bg.integer_validator("no", 0)
	Traceback (most recent call last):
	ValueError: no must be greater than 0

	>>> bg.integer_validator("no", -4)
	Traceback (most recent call last):
	ValueError: no must be greater than 0

	>>> bg.integer_validator("no", (1, 2))	
	Traceback (most recent call last):
	TypeError: no must be an integer

	>>> bg.integer_validator("no", 100000000000)

	>>> bg.integer_validator("no", {1, 2})
	Traceback (most recent call last):	
	TypeError: no must be an integer
